#!/usr/bin/env bash


# Filesystem
alias rm='rm -i'
alias ll='ls -lGha'
alias ll='ls -FGlAhp'
# color=always causes more grief than its worth when pipelining commands
# alias grep='grep --color=always'
alias jj='pushd $(fd -I -td | fzf)'

#macOs
alias serial_number="system_profiler SPHardwareDataType -json | jq -r '.SPHardwareDataType[].serial_number'"

# Network
alias whatport='what_port'
alias killport='kill_port'


# SSH
alias sshgen='ssh-keygen -t rsa'
alias sshkey='pbcopy < ~/.ssh/id_rsa.pub'


# conveniences
alias easytimenow='date +%Y%m%d_%H%M_%s'
alias prettyjson='python -m json.tool'
alias nospace='egrep -v "^#|^[[:space:]]*$"'
alias no_commments_space='egrep -v "^;|^#|^[[:space:]]*$"'
alias pwdtail='pwd | rev | cut -d/ -f1-2 | rev'
alias fd='fd --hidden --no-ignore "$@"'
alias resettty="printf '\e[?2004l'" # https://apple.stackexchange.com/questions/446859/when-pasting-in-terminal-app-00-is-pasted-at-the-start-and-01-at-the-end

# Git
alias git_config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
alias git_credentials_show='echo -e "\n# git credentials (helper)";git credentials.helper;echo -e "\n# git credentials (global)";git credentials.global;echo -e "\n# git credentials (local)";git credentials.local'
alias git_find_branches_for_hash='git branch -a --contains'
alias tower='gittower git rev-parse --show-toplevel'

# alias nah='git reset --hard; git clean -df' # Gone forever - Reset to last commit and remove untracked files and directories.
alias nuke='git reset --hard;git clean -df'

# Recover with git reflog - Reset to last commit and remove untracked files and directories.
alias nope='git reset --hard'

# debug git
alias git_debug="GIT_TRACE=true GIT_CURL_VERBOSE=true GIT_SSH_COMMAND=\"ssh -vvv\" GIT_TRACE_PACK_ACCESS=true GIT_TRACE_PACKET=true GIT_TRACE_PACKFILE=true GIT_TRACE_PERFORMANCE=true GIT_TRACE_SETUP=true GIT_TRACE_SHALLOW=true git $@"


# Brew
alias bsl='sudo brew services list && brew services list'


# Get VSCode extensions
alias codeextensions='code --list-extensions | xargs -L 1 echo code --install-extension'
alias subl=code # no sublime - vscode only


# Emotes
alias shrug="echo '¯\_(ツ)_/¯' | pbcopy;echo '¯\_(ツ)_/¯'";


# Defaults
# Show/Hide hidden files in Finder
alias showhidden='defaults write com.apple.finder AppleShowAllFiles TRUE && killall Finder'
alias hidehidden='defaults write com.apple.finder AppleShowAllFiles FALSE && killall Finder'


# Force empty the trash
alias forceempty='sudo rm -rf ~/.Trash; sudo rm -rf /Volumes/*/.Trashes;'
alias ejectdisc='drutil tray eject'


# Java JEnv - jenv http://www.jenv.be/
# This is a non standard alias to set JAVA_HOME based on jenv environment.
alias jenv_set_java_home='export JAVA_HOME="$HOME/.jenv/versions/$(jenv version-name)"'


# VMWare Tools
alias ovftool='/Applications/VMware\ Fusion.app/Contents/Library/VMware\ OVF\ Tool/ovftool'
alias vmnet-cli='/Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli'


# Jetbrains
alias pstorm='phpstorm'
alias diff_with_phpstorm='phpstorm diff'
alias smartgit="launchSmartGit $1"

# Docker
alias dock_prune='docker container prune'



# Vagrant
alias vagrant='HOMESTEADVM='\''centos'\'' vagrant'
alias vglob='vagrant global-status --prune 2>/dev/null | egrep -i --color=always "^.*$(pwd)[ ]*$|$"'
alias vush='vagrant up && vssh'
alias vnoprov='vagrant up --no-provision 2>&1 | grep -v VAGRANTFILE_API_VERSION | grep already && vagrant reload --no-provision'
#alias v_glob='vagrant global-status --prune 2>&1 | grep -v VAGRANTFILE_API_VERSION | egrep -i --color=always "^.*$(pwd).*$|$"'



# JS Node NPM PNPM YARN
alias fixjs='[ -d ./node_modules ] && rm -rf node_modules/;nvm use;nvm install --latest-npm; npm cache clear --force && npm install'
alias rebuildjs='npmlist rebuilt_pre; rm -f package-lock.json && echo "⚡️ package-lock.json removed";npm cache clear --force && echo "⚡️ npm cache cleared";npm install;npmlist rebuilt;echo "⚡️ done: see rebuilt_pre"'
alias reinstalljs='npmlist installed_pre; npm cache clear --force && echo "⚡️ npm cache cleared";npm ci;npmlist installed;echo "⚡️ done: see installed_pre"'
alias revertjs='npmlist reverted_pre; git checkout package-lock.json && echo "⚡️ package-lock.json restored to git version";npm cache clear --force && echo "⚡️ npm cache cleared";npm ci;npmlist reverted;echo "⚡️ done: see reverted_pre"'
alias ng='npm list -g --depth=0'
alias nl='npm list --depth=0'
alias switch_js='nvm'
alias pn='pnpm'


# PHP Laravel Valet
# alias sphp70='switch_php 7.0 prompt'
# alias sphp72='switch_php 7.2 prompt'
# alias sphp73='switch_php 7.3 prompt'
# alias sphp74='switch_php 7.4 prompt'
# alias sphp80='switch_php 8.0 prompt'
# alias sphp81='switch_php 8.1 prompt'
# alias sphp82='switch_php 8.2 prompt'
# alias sphp83='switch_php 8.3 prompt'
# alias sphp84='switch_php 8.4 prompt'

# alias vlsi='valet link && valet secure && valet isolate'

alias php_version='php -r "echo PHP_VERSION;" | cut -d. -f-2' # current php version

# FrankenPHP
alias fphp='frankenphp-mac-x86_64'
alias frankenphp='frankenphp-mac-x86_64'

# Laravel
alias art='php artisan'
alias artisan='php artisan'
alias amfs='php artisan migrate:fresh --seed --seeder=SetupSeeder --step -v'
alias tinker='php artisan tinker'
alias sail='bash vendor/bin/sail' # docker
alias pest='[ -f vendor/bin/pest ] && vendor/bin/pest'
alias pint='[ -f vendor/bin/pint ] && vendor/bin/pint'
alias duster='[ -f vendor/bin/duster ] && vendor/bin/duster'

# enough is enough
alias boom='fixcomposer; clearall'
alias boomjs='fixcomposer; clearall; fixjs'
alias kaboom='nah; boom'
# enough is enough - level it all and test
alias bosh='rm -f .env.testing .env.dusk;boom;composer test;composer test-dusk'
alias boshjs='rm -f .env.testing .env.dusk;boom;fixjs;composer test;composer test-dusk'
alias kabosh='rm -f .env.testing .env.dusk;kaboom;composer test;composer test-dusk'
alias kaboshjs='rm -f .env.testing .env.dusk;kaboom;fixjs;composer test;composer test-dusk'

# composer
alias c='composer'
alias cgs='composer global --no-interaction show -D'
alias fixcomposer='[ -d ./vendor -a -f .env ] && { rm -rf ./vendor/* && composer i -v; }'
alias vendor_mods_list="composer status -v |sed 's/^[ ]*//'| sed 's/^\.//'|sed 's/:$//'|sed 'N;s/\n//'| cut -d'(' -f1 | sed \"s:\$(pwd):.:\""
alias vendor_mods_archive='tar -cvzf scratch/vendor_changes_$(date "+%Y_%m_%d.%H%M%S").tgz $(vendor_mods_list 2>/dev/null) && ls -rt scratch/vendor_changes_* | tail -1'


# PhpUnit
alias phpunit='/usr/local/bin/phpunit'
alias phpunit='vendor/bin/phpunit --log-junit scratch/phpunit_release_report.$(date "+%Y_%m_%d.%H%M%S").xml'
# support env var 'phpunitpart' as part of the filename
alias phpunit='vendor/bin/phpunit --log-junit $(echo ${phpunitdir:-scratch})/phpunit_$(echo ${phpunitpart:-report}).xml'

alias phpspec='/usr/local/bin/phpspec'

# xDebug
alias xdebug_disable='xdbgfile=$(php -m | grep -i xdebug -q && php --ini | grep -i xdebug |tr -d ',') && [ -n "$xdbgfile" ] && [ -f "$xdbgfile" ] && mv "$xdbgfile" "${xdbgfile}_disabled" || echo "xdebug is not enabled"'
alias xdebug_restore='incpath=$(php --ini | grep -i "Scan for additional .ini files" | cut -d: -f2 | xargs) && [ -n "$incpath" ] && xdbgfile=$(ls "${incpath}/"*xdebug*disabled) && [ -n "$xdbgfile}" ] && mv $xdbgfile "${incpath}/xdebug.ini" || echo "cannot determine php ini include path"'

# PHPDeployer - https://deployer.org
alias dep='vendor/bin/dep'                    # no global install - (composer 2 issue) - use project's vendor install.

# https://github.com/ibraheemdev/modern-unix

alias modern-unix='echo bat cheat tldr lsd dog curlie duf dust gping mcfly gtop rg'
alias modern-unixv="for p in \$(modern-unix | cut -d'-' -f1); do printf \"%-10s \$(brew info \$p | sed -n '2p')\n\" \$p ; done"

