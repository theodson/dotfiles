#!/usr/bin/env bash

# exit on any failure including within piped commands.
set -o pipefail -e

# Where this script lives
DOTFILES=$(realpath "$(dirname $0)")

cd $HOME
echo '================================================================================'
echo 'Preparing dotfile install ...'
sudo -v # ensure we only type password once

type php &>/dev/null && current_php_version=$(php -r "echo PHP_VERSION;" | cut -d. -f-2)


if test ! "$(which brew)"; then
    echo '================================================================================'
    echo 'Installing homebrew...'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    echo 'Done installing homebrew.'
fi

if test -f $HOME/.dotfile_lastrun; then
    if test -f "$DOTFILES/preinstall"; then
        echo '================================================================================'
        echo 'Running PreInstall script ...'
        pushd $DOTFILES && bash preinstall && popd || true
        echo 'Done PreInstall.'
#        echo '================================================================================'
    fi
fi

# if test ! -e $HOME/.vim/autoload/plug.vim; then
#     echo '================================================================================'
#     echo 'Installing vim-plug...'
#     curl --create-dirs -fLo $HOME/.vim/autoload/plug.vim https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
#     echo 'Done installing vim-plug.'
#     echo '================================================================================'
# fi

# # @see: https://intelephense.com/faq.html
# if test ! -e $HOME/intelephense/licence.txt; then
#     echo '================================================================================'
#     echo 'Setting up Intelephense license...'
#     mkdir -p $HOME/intelephense
#     echo 'Enter your Intelephense license key:'
#     read -s INTELEPHENSE_LICENSE_KEY
#     echo $INTELEPHENSE_LICENSE_KEY > $HOME/intelephense/licence.txt
#     echo 'Done setting up Intelephense license.'
#     echo '================================================================================'
# fi

echo '================================================================================'
echo 'Linking dotfiles...'
/bin/bash "$DOTFILES/link" || true
echo 'Done linking dotfiles.'
# echo '================================================================================'



echo '================================================================================'
echo 'Installing, updating, and cleaning up brew dependencies...'

#sudo chown -R $(id -un) /usr/local/Cellar/{php*,dnsmasq*,nginx*} &>/dev/null || true

export HOMEBREW_NO_INSTALL_CLEANUP=true

brew bundle --global || true

#brew bundle cleanup --force --global
# brew services cleanup
# sudo brew services cleanup
#brew cleanup
echo 'Done installing, updating, and cleaning up brew dependencies.'
# echo '================================================================================'

echo '================================================================================'
echo 'Installing and updating composer dependencies...'
echo 'Done installing and updating composer dependencies.'
#echo '================================================================================'


#
# Java Setup - jenv required.
#
brew install openjdk@8 openjdk@17 openjdk@23 jenv
eval "$(jenv init -)" && echo -n "jenv init done. " && jenv enable-plugin export || echo "jenv failed to initialise"
echo "Linking JDKs - requires sudo"
sudo ln -snf $(brew --prefix)/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
sudo ln -snf $(brew --prefix)/opt/openjdk@23/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-23.jdk
sudo ln -snf $(brew --prefix)/opt/openjdk@8/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-8.jdk
jenv add /Library/Java/JavaVirtualMachines/openjdk-17.jdk/Contents/Home/
jenv add /Library/Java/JavaVirtualMachines/openjdk-23.jdk/Contents/Home/
jenv add /Library/Java/JavaVirtualMachines/openjdk-8.jdk/Contents/Home/
jenv global 23


# /bin/bash $DOTFILES/link

# echo '================================================================================'
# echo 'Installing and updating npm dependencies...'
# npm install -g npm@latest
# npm update -g
# echo 'Done installing and updating npm dependencies.'
# echo '================================================================================'

# echo '================================================================================'
# echo 'Installing and updating pecl dependencies...'
# pecl update-channels
# # For whatever reason, brew is symlinking to the following directory, but it doesn't exist
# # and extensions can't be installed. This should resolve that.
# mkdir /usr/local/lib/php/pecl -p
# # pecl upgrade will also install if it isn't yet installed, where as pecl
# # install will fail if it is installed.
# pecl upgrade pcov
# echo 'Done installing and updating pecl dependencies.'
# echo '================================================================================'

# echo '================================================================================'
# echo 'Installing and updating FZF...'
# /usr/local/opt/fzf/install --key-bindings --completion --update-rc --no-bash --no-fish
# echo 'Done installing and updating FZF.'
# echo '================================================================================'

# Additionally, if you receive “zsh compinit: insecure directories” warnings
# when attempting to load these completions, you may need to run this
# see: https://docs.brew.sh/Shell-Completion
# compaudit | xargs chmod g-w

echo '================================================================================'
echo 'Setting defaults.'
if test -r $HOME/.defaults; then
    source .defaults || true
fi
# echo '================================================================================'

# As we rely on valet, switch_php and php_install for handling the differences in php installation
# we need to inform those scripts that dotfiles and brew bundle has recently run.
date > $HOME/.dotfile_lastrun

# https://scriptingosx.com/2017/04/about-bash_profile-and-bashrc-on-macos/
# Alternative to dotfiles - https://yadm.io

echo -e "No longer support PHP 7.x natively in macOs... its too hard... reach for OrbStack machines! 🟣"


